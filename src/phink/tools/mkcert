#!/bin/bash
C=$1;
ST=$2;
L=$3;
O=$4;
OU=$5;
CN=$6;

if [ -z "${C}" ];
then
	echo "The country code is missing";
	exit 1;
fi

if [ -z "${ST}" ];
then
	echo "The state is missing";
	exit 1;
fi

if [ -z "${L}" ];
then
	echo "The location is missing";
	exit 1;
fi

if [ -z "${O}" ];
then
	echo "The organization name is missing";
	exit 1;
fi

if [ -z "${OU}" ];
then
	echo "The organization unit is missing";
	exit 1;
fi

if [ -z "${CN}" ];
then
	echo "The common name is missing";
	exit 1;
fi

if [ ! -d ~/.certs/${CN} ];
then
	mkdir -p ~/.certs/${CN};
fi

cd ~/.certs/${CN};

if [ ! -f rootCA.key ];
then
	openssl genrsa -des3 -out rootCA.key 2048

	openssl req -x509 \
		-new -nodes \
 		-key rootCA.key \
		-sha256 \
		-days 1024 \
		-out rootCA.pem \
		-subj "/C=FR/ST=IDF/L=Paris/O=CodePhoenixOrg/OU=IT/CN=E-Commerce/emailAddress=david.blanchard@phink.org"
fi

openssl req \
 	-newkey rsa:2048 \
	-nodes \
	-keyout ${CN}.key \
	-out ${CN}.csr \
	-subj "/C=FR/ST=${ST}/L=${L}/O=${O}/OU=${OU}/CN=${CN}/emailAddress=david.blanchard@phink.org"

openssl x509 \
	-req -in ${CN}.csr \
	-CA ca.pem \
	-CAkey ca.key \
	-CAcreateserial \
	-out ${CN}.pem \
	-days 1024 -sha256

openssl x509 \
	-signkey ${CN}.key \
	-in ${CN}.csr \
	-req \
	-days 365 \
	-out ${CN}.crt

openssl pkcs12 -export -clcerts -in ${CN}.crt -inkey ${CN}.key -out ${CN}.p12

echo Use ${OU}.pem as SSL certificate
echo Use ${OU}.key as certificate key
echo Use ${OU}.p12 as client side certificate

